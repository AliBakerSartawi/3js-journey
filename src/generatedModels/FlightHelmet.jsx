/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { MeshStandardMaterial } from 'three';

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF('./flightHelmet/FlightHelmet.gltf');

  // instead of applying it manually to each material
  for (const key in materials) {
    const material = materials[key];
    // to not apply it to MeshBasicMaterial
    if (material instanceof MeshStandardMaterial) {
      material.envMap = props.envMap;
      material.envMapIntensity = props.envMapIntensity;
    }
  }

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow={props.shadows}
        receiveShadow={props.shadows}
        geometry={nodes.Hose_low.geometry}
        material={materials.HoseMat}
        // material-envMap={props.envMap}
        // material-envMapIntensity={props.envMapIntensity}
      />
      <mesh
        castShadow={props.shadows}
        receiveShadow={props.shadows}
        geometry={nodes.RubberWood_low.geometry}
        material={materials.RubberWoodMat}
        // material-envMap={props.envMap}
        // material-envMapIntensity={props.envMapIntensity}
      />
      <mesh
        castShadow={props.shadows}
        receiveShadow={props.shadows}
        geometry={nodes.GlassPlastic_low.geometry}
        material={materials.GlassPlasticMat}
        // material-envMap={props.envMap}
        // material-envMapIntensity={props.envMapIntensity}
      />
      <mesh
        castShadow={props.shadows}
        receiveShadow={props.shadows}
        geometry={nodes.MetalParts_low.geometry}
        material={materials.MetalPartsMat}
        // material-envMap={props.envMap}
        // material-envMapIntensity={props.envMapIntensity}
      />
      <mesh
        castShadow={props.shadows}
        receiveShadow={props.shadows}
        geometry={nodes.LeatherParts_low.geometry}
        material={materials.LeatherPartsMat}
        // material-envMap={props.envMap}
        // material-envMapIntensity={props.envMapIntensity}
      />
      <mesh
        castShadow={props.shadows}
        receiveShadow={props.shadows}
        geometry={nodes.Lenses_low.geometry}
        material={materials.LensesMat}
        // material-envMap={props.envMap}
        // material-envMapIntensity={props.envMapIntensity}
      />
    </group>
  );
}

useGLTF.preload('./flightHelmet/FlightHelmet.gltf');
